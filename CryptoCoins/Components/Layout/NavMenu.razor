@using CryptoCoins.Helpers
@using CryptoCoins.Models
@using CryptoCoins.Services
@using CryptoCoins.Views
@using MySql.Data.MySqlClient;
@inject IJSRuntime JSRuntime
@inject PackagesService PackagesService


<div class="top-row navbar navbar-dark">
    <div class="container-fluid text-center">
        <img src="images/CRlogo.png" alt="logo" height="80" />
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        @if (!isAdmin)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="mdi mdi-home" aria-hidden="true"></span> Dashboard
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="launchpad">
                    <span class="mdi mdi-hammer" aria-hidden="true"></span> Launchpad
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="licence">
                    <span class="mdi mdi-key" aria-hidden="true"></span> License Key
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="contact">
                    <span class="mdi mdi-phone" aria-hidden="true"></span> Contact Us
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" @onclick="HandleLogout">
                    <span class="mdi mdi-logout" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
            @if (PackagesService.Names.Count > 0)
            {
                string name = string.Join(",", PackagesService.Names);
                <div class="bottom-item">
                    <div class="license-details">
                        <p class="text-base font-bold">License : @name</p>
                        <p class="secondary-color text-xs">Start searching and get payment</p>
                    </div>
                </div>
            }
            else
            {
                <div class="bottom-item">
                    <div class="license-details">
                        <p class="text-base font-bold">License : None</p>
                        <p class="secondary-color text-xs">Purchase a License to start a Search</p>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="wallets" Match="NavLinkMatch.All">
                    <span class="mdi mdi-wallet" aria-hidden="true"></span> Wallets
                </NavLink>
            </div>

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="manage-subscriptions">
                    <span class="mdi mdi-key" aria-hidden="true"></span> Subscriptions
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" @onclick="HandleLogout">
                    <span class="mdi mdi-logout" aria-hidden="true"></span> Logout
                </NavLink>
            </div>
        }

        





        <!-- <div class="nav-item px-3">
            <NavLink class="nav-link" href="account">
                <span class="mdi mdi-phone" aria-hidden="true"></span> Account
            </NavLink>
        </div> -->



    </nav>
</div>
@code {

    private LoginView loginview;

    bool isAdmin;
    string name = "";

    protected override void OnInitialized()
    {
        PackagesService.OnChange += StateHasChanged;
        isAdmin = StGlobal.IsAdmin; // or set your condition here
                                    //isAdmin = true; // or set your condition here
        GetPackage();
    }

    private void HandleLogout()
    {
        var v = this.GetType();
        //loginview = this.d
        // Get a reference to the MainPage
        var mainPage = Application.Current.MainPage;

        // You can now access properties and methods of the MainPage
        if (mainPage is MainPage)
        {
            // Cast to the correct type
            var mainPageInstance = (MainPage)mainPage;

            loginview = new LoginView();
            mainPageInstance.Content = loginview;
        }
    }
    private async void GetPackage()
    {
        using (MySqlConnection connection = StGlobal.GetSqlConnection())
        {
            connection.Open();

            string query = "SELECT subscription_name FROM Subscriptions WHERE user_id = @Id";
            MySqlCommand command = new MySqlCommand(query, connection);
            command.Parameters.AddWithValue("@Id", StGlobal.Id);

            using (var reader = (MySqlDataReader)await command.ExecuteReaderAsync())
            {
                // Clear the existing list to avoid appending duplicate values
                PackagesService.ClearNames();

                while (await reader.ReadAsync())
                {
                    // Assuming subscription_name is a string
                    string subscriptionName = reader.GetString(reader.GetOrdinal("subscription_name"));
                    PackagesService.AddName(subscriptionName);
                }
            }
            StateHasChanged();
        }
    }
}